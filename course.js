var pg = require('pg');var connectionString = 'postgres://postgres:postgres@localhost:5433/infinity_course_db';var client = new pg.Client(connectionString);var redis = require('redis');client.connect();var publisher = redis.createClient(6379, 'localhost' , {no_ready_check: true});publisher.on('connect', function() {    console.log('Connected to Publisher Redis');});exports.addCourse = function(req, res, callback){console.log('Connected to database');console.log(req.body.cid);var query = client.query("insert into ms_course_tbl values($1, $2, $3, $4, $5)", [req.body.cid, req.body.courseno, req.body.prof, req.body.room, req.body.timings], function(err){if(err) {  console.log('Course already exists.');  res.status(409); } else { 	query.on('end', function(error, result) {     if(error){     res.status(500);	      }//No errorelse{	res.status(200);	console.log("Successfully added course.");    }     }); } callback(res);});}exports.addStudentToCourse = function(req, res, callback){var lname = req.body.lname;var courseno = req.body.courseno;var queryForCheckingExistenceOfPair = client.query("select * from ms_student_course_tbl where courseno = $1 and lname = $2", [courseno, lname], function(err, result){rowCount = result.rows.length;if(rowCount == 0){var query = client.query("insert into ms_student_course_tbl(courseno,lname) values($1, $2)", [courseno,lname], function(err){	if(err)	{	console.log('Trying to add course to a student that does not exist');    res.status(417);	}	else	{    query.on('end', function(error, result) {			if(error)			{				res.status(500);			}			else			{				res.status(200);				console.log("Row successfully inserted");					message =   {	                      "origin":"course" ,	                      "event":"student_added_to_course",						  "lname" : lname,						  "courseno" : courseno	                  };	         console.log(typeof(message.origin));	         publisher.publish('RI', JSON.stringify(message));			}			});	}callback(res);});}});}exports.getCourseDetails = function(req,res,callback){var lnames = [];var responseJson;console.log('Connected to database');console.log(req.params.course_id);var flag = false;var query = client.query("Select * from ms_course_tbl left outer join ms_student_course_tbl on (ms_course_tbl.courseno = ms_student_course_tbl.courseno) where ms_course_tbl.courseno= $1", [req.params.course_id]);query.on('row', function(row) {	flag = true;	lnames.push(row.lname);	responseJson = "{'cid':"+ row.cid + ", 'courseno':" + req.params.course_id + ", 'prof':"+ row.prof + ", 'room' :" + row.room + ", 'timings':" + row.timings +  ","  + " 'lnames': " + lnames + "}";  });query.on('end', function(result){	if(flag)	{	console.log(responseJson);	res.json(responseJson);    }    else    {     res.json({message:'Course does not exist'});    }	callback(res);});}exports.updateCourse = function(req, res, callback){console.log('Connected to database in update');var queryString= 'update ms_course_tbl set ';var courseno = req.params.course_id;for (var key in req.body) {  if (req.body.hasOwnProperty(key)) {    console.log(key + " -> " + req.body[key]);    queryString = queryString  + key + ' = ' + "'"+req.body[key] + "'" + ',';  }}queryString = queryString.substring(0, queryString.length - 1);queryString = queryString + ' where courseno = $1';console.log(queryString);var query = client.query(queryString, [courseno], function(err){  if(err)  {  console.log('error');  res.status(400);  callback(res);   }  else  {  	query.on('end', function(result) {if(result.rowCount == 0){	res.status(417);	callback(res);}//No errorelse{	res.status(200);		console.log("Row successfully updated");	callback(res);   }		//client.end();});}});}exports.deleteCourse = function(req, res, callback){	console.log('Connected to database to delete student');	var courseno = req.params.course_id;	console.log(courseno);	var queryForCourseDatabase = 'Delete from ms_course_tbl where courseno = $1';	var queryForStudentCourseDatabase ='Delete from ms_student_course_tbl where courseno = $1';	var query = client.query(queryForStudentCourseDatabase, [courseno]);    query.on('end', function(result) {	console.log("Row successfully deleted from relationship table");	var queryForCourse = client.query(queryForCourseDatabase, [courseno]);	queryForCourse.on('end', function(result) {		if(result.rowCount == 0)		{			res.status(417);		}		else		{			res.status(200);		console.log("Inside queryforCourse end")		message =   {										"origin":"course" ,										"event":"student_removed_from_course",										"lname" : "All",										"courseno" : courseno					};			 console.log(typeof(message.origin));			 publisher.publish('RI', JSON.stringify(message));	console.log("Row successfully deleted from course table");	//client.end();}callback(res);});});}exports.deleteStudentFromCourse = function(req, res, callback){var courseno = req.params.course_id;var lname = req.params.student_id;var flag = false;var queryForStudentCourseDatabase;var query;var queryForCheckingExistenceOfPair;if(courseno == 'All'){queryForCheckingExistenceOfPair = client.query("select * from ms_student_course_tbl where lname = $1 limit 1", [lname]);queryForCheckingExistenceOfPair.on('row', function(row){	flag = true;	queryForStudentCourseDatabase = 'Delete from ms_student_course_tbl where lname = $1';	var query = client.query(queryForStudentCourseDatabase, [lname]);	query.on('end', function(result) {		message =   {										"origin":"course" ,										"event":"student_removed_from_course",										"lname" : lname,										"courseno" : courseno				    };			 console.log(typeof(message.origin));			 publisher.publish('RI', JSON.stringify(message));	console.log("Row successfully deleted from course-student relationship table");	//client.end();});});query.on('end', function(result){	if(flag)	{	res.status(200);    }    else    {    res.status(417);     }	callback(res);});}else{queryForCheckingExistenceOfPair = client.query("select * from ms_student_course_tbl where courseno = $1 and lname = $2", [courseno, lname]);queryForCheckingExistenceOfPair.on('row', function(row){	flag = true;	queryForStudentCourseDatabase = 'Delete from ms_student_course_tbl where lname = $1 and courseno = $2';	var query = client.query(queryForStudentCourseDatabase, [lname,courseno]);	query.on('end', function(result) {		message =   {										"origin":"course" ,										"event":"student_removed_from_course",										"lname" : lname,										"courseno" : courseno				    };			 console.log(typeof(message.origin));			 publisher.publish('RI', JSON.stringify(message));	console.log("Row successfully deleted from course-student relationship table");	//client.end();});});query.on('end', function(result){	if(flag)	{	res.status(200);    }    else    {     res.status(417);    }	callback(res);});}}